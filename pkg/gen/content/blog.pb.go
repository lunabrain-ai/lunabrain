// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: content/blog.proto

package content

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HugoConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishDir             string                     `protobuf:"bytes,1,opt,name=publish_dir,json=publishDir,proto3" json:"publish_dir,omitempty"`
	BaseUrl                string                     `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	Title                  string                     `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Paginate               int32                      `protobuf:"varint,4,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Theme                  []string                   `protobuf:"bytes,5,rep,name=theme,proto3" json:"theme,omitempty"`
	EnableInlineShortcodes bool                       `protobuf:"varint,6,opt,name=enable_inline_shortcodes,json=enableInlineShortcodes,proto3" json:"enable_inline_shortcodes,omitempty"`
	EnableRobotsTxt        bool                       `protobuf:"varint,7,opt,name=enable_robots_txt,json=enableRobotsTxt,proto3" json:"enable_robots_txt,omitempty"`
	BuildDrafts            bool                       `protobuf:"varint,8,opt,name=build_drafts,json=buildDrafts,proto3" json:"build_drafts,omitempty"`
	BuildFuture            bool                       `protobuf:"varint,9,opt,name=build_future,json=buildFuture,proto3" json:"build_future,omitempty"`
	BuildExpired           bool                       `protobuf:"varint,10,opt,name=build_expired,json=buildExpired,proto3" json:"build_expired,omitempty"`
	EnableEmoji            bool                       `protobuf:"varint,11,opt,name=enable_emoji,json=enableEmoji,proto3" json:"enable_emoji,omitempty"`
	PygmentsUseClasses     bool                       `protobuf:"varint,12,opt,name=pygments_use_classes,json=pygmentsUseClasses,proto3" json:"pygments_use_classes,omitempty"`
	MainSections           []string                   `protobuf:"bytes,13,rep,name=main_sections,json=mainSections,proto3" json:"main_sections,omitempty"`
	Minify                 *MinifyConfig              `protobuf:"bytes,14,opt,name=minify,proto3" json:"minify,omitempty"`
	Languages              map[string]*LanguageConfig `protobuf:"bytes,15,rep,name=languages,proto3" json:"languages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Outputs                map[string]*RepeatedString `protobuf:"bytes,16,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Params                 *ParamsConfig              `protobuf:"bytes,17,opt,name=params,proto3" json:"params,omitempty"`
	Markup                 *MarkupConfig              `protobuf:"bytes,18,opt,name=markup,proto3" json:"markup,omitempty"`
	Services               *ServicesConfig            `protobuf:"bytes,19,opt,name=services,proto3" json:"services,omitempty"`
}

func (x *HugoConfig) Reset() {
	*x = HugoConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HugoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HugoConfig) ProtoMessage() {}

func (x *HugoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HugoConfig.ProtoReflect.Descriptor instead.
func (*HugoConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{0}
}

func (x *HugoConfig) GetPublishDir() string {
	if x != nil {
		return x.PublishDir
	}
	return ""
}

func (x *HugoConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *HugoConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HugoConfig) GetPaginate() int32 {
	if x != nil {
		return x.Paginate
	}
	return 0
}

func (x *HugoConfig) GetTheme() []string {
	if x != nil {
		return x.Theme
	}
	return nil
}

func (x *HugoConfig) GetEnableInlineShortcodes() bool {
	if x != nil {
		return x.EnableInlineShortcodes
	}
	return false
}

func (x *HugoConfig) GetEnableRobotsTxt() bool {
	if x != nil {
		return x.EnableRobotsTxt
	}
	return false
}

func (x *HugoConfig) GetBuildDrafts() bool {
	if x != nil {
		return x.BuildDrafts
	}
	return false
}

func (x *HugoConfig) GetBuildFuture() bool {
	if x != nil {
		return x.BuildFuture
	}
	return false
}

func (x *HugoConfig) GetBuildExpired() bool {
	if x != nil {
		return x.BuildExpired
	}
	return false
}

func (x *HugoConfig) GetEnableEmoji() bool {
	if x != nil {
		return x.EnableEmoji
	}
	return false
}

func (x *HugoConfig) GetPygmentsUseClasses() bool {
	if x != nil {
		return x.PygmentsUseClasses
	}
	return false
}

func (x *HugoConfig) GetMainSections() []string {
	if x != nil {
		return x.MainSections
	}
	return nil
}

func (x *HugoConfig) GetMinify() *MinifyConfig {
	if x != nil {
		return x.Minify
	}
	return nil
}

func (x *HugoConfig) GetLanguages() map[string]*LanguageConfig {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *HugoConfig) GetOutputs() map[string]*RepeatedString {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *HugoConfig) GetParams() *ParamsConfig {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *HugoConfig) GetMarkup() *MarkupConfig {
	if x != nil {
		return x.Markup
	}
	return nil
}

func (x *HugoConfig) GetServices() *ServicesConfig {
	if x != nil {
		return x.Services
	}
	return nil
}

type MinifyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableXml bool `protobuf:"varint,1,opt,name=disable_xml,json=disableXml,proto3" json:"disable_xml,omitempty"`
}

func (x *MinifyConfig) Reset() {
	*x = MinifyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinifyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinifyConfig) ProtoMessage() {}

func (x *MinifyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinifyConfig.ProtoReflect.Descriptor instead.
func (*MinifyConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{1}
}

func (x *MinifyConfig) GetDisableXml() bool {
	if x != nil {
		return x.DisableXml
	}
	return false
}

type LanguageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageName string                       `protobuf:"bytes,1,opt,name=language_name,json=languageName,proto3" json:"language_name,omitempty"`
	Weight       int32                        `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Title        string                       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Taxonomies   map[string]string            `protobuf:"bytes,4,rep,name=taxonomies,proto3" json:"taxonomies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Menu         map[string]*RepeatedMenuItem `protobuf:"bytes,5,rep,name=menu,proto3" json:"menu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Params       map[string]string            `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LanguageConfig) Reset() {
	*x = LanguageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageConfig) ProtoMessage() {}

func (x *LanguageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageConfig.ProtoReflect.Descriptor instead.
func (*LanguageConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{2}
}

func (x *LanguageConfig) GetLanguageName() string {
	if x != nil {
		return x.LanguageName
	}
	return ""
}

func (x *LanguageConfig) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *LanguageConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LanguageConfig) GetTaxonomies() map[string]string {
	if x != nil {
		return x.Taxonomies
	}
	return nil
}

func (x *LanguageConfig) GetMenu() map[string]*RepeatedMenuItem {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *LanguageConfig) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type MenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Weight int32  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *MenuItem) Reset() {
	*x = MenuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItem) ProtoMessage() {}

func (x *MenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItem.ProtoReflect.Descriptor instead.
func (*MenuItem) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{3}
}

func (x *MenuItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuItem) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type EditPostConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Text           string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	AppendFilePath bool   `protobuf:"varint,3,opt,name=append_file_path,json=appendFilePath,proto3" json:"append_file_path,omitempty"`
}

func (x *EditPostConfig) Reset() {
	*x = EditPostConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditPostConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPostConfig) ProtoMessage() {}

func (x *EditPostConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPostConfig.ProtoReflect.Descriptor instead.
func (*EditPostConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{4}
}

func (x *EditPostConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EditPostConfig) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EditPostConfig) GetAppendFilePath() bool {
	if x != nil {
		return x.AppendFilePath
	}
	return false
}

type AssetsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableHljs bool `protobuf:"varint,1,opt,name=disable_hljs,json=disableHljs,proto3" json:"disable_hljs,omitempty"`
}

func (x *AssetsConfig) Reset() {
	*x = AssetsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsConfig) ProtoMessage() {}

func (x *AssetsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsConfig.ProtoReflect.Descriptor instead.
func (*AssetsConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{5}
}

func (x *AssetsConfig) GetDisableHljs() bool {
	if x != nil {
		return x.DisableHljs
	}
	return false
}

type MarkupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goldmark  *GoldmarkConfig  `protobuf:"bytes,1,opt,name=goldmark,proto3" json:"goldmark,omitempty"`
	Highlight *HighlightConfig `protobuf:"bytes,2,opt,name=highlight,proto3" json:"highlight,omitempty"`
}

func (x *MarkupConfig) Reset() {
	*x = MarkupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkupConfig) ProtoMessage() {}

func (x *MarkupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkupConfig.ProtoReflect.Descriptor instead.
func (*MarkupConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{6}
}

func (x *MarkupConfig) GetGoldmark() *GoldmarkConfig {
	if x != nil {
		return x.Goldmark
	}
	return nil
}

func (x *MarkupConfig) GetHighlight() *HighlightConfig {
	if x != nil {
		return x.Highlight
	}
	return nil
}

type GoldmarkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Renderer *RendererConfig `protobuf:"bytes,1,opt,name=renderer,proto3" json:"renderer,omitempty"`
}

func (x *GoldmarkConfig) Reset() {
	*x = GoldmarkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldmarkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldmarkConfig) ProtoMessage() {}

func (x *GoldmarkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldmarkConfig.ProtoReflect.Descriptor instead.
func (*GoldmarkConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{7}
}

func (x *GoldmarkConfig) GetRenderer() *RendererConfig {
	if x != nil {
		return x.Renderer
	}
	return nil
}

type RendererConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unsafe bool `protobuf:"varint,1,opt,name=unsafe,proto3" json:"unsafe,omitempty"`
}

func (x *RendererConfig) Reset() {
	*x = RendererConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RendererConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RendererConfig) ProtoMessage() {}

func (x *RendererConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RendererConfig.ProtoReflect.Descriptor instead.
func (*RendererConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{8}
}

func (x *RendererConfig) GetUnsafe() bool {
	if x != nil {
		return x.Unsafe
	}
	return false
}

type HighlightConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoClasses bool `protobuf:"varint,1,opt,name=no_classes,json=noClasses,proto3" json:"no_classes,omitempty"`
}

func (x *HighlightConfig) Reset() {
	*x = HighlightConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighlightConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighlightConfig) ProtoMessage() {}

func (x *HighlightConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighlightConfig.ProtoReflect.Descriptor instead.
func (*HighlightConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{9}
}

func (x *HighlightConfig) GetNoClasses() bool {
	if x != nil {
		return x.NoClasses
	}
	return false
}

type ServicesConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instagram *ServiceConfig `protobuf:"bytes,1,opt,name=instagram,proto3" json:"instagram,omitempty"`
	Twitter   *ServiceConfig `protobuf:"bytes,2,opt,name=twitter,proto3" json:"twitter,omitempty"`
}

func (x *ServicesConfig) Reset() {
	*x = ServicesConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesConfig) ProtoMessage() {}

func (x *ServicesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesConfig.ProtoReflect.Descriptor instead.
func (*ServicesConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{10}
}

func (x *ServicesConfig) GetInstagram() *ServiceConfig {
	if x != nil {
		return x.Instagram
	}
	return nil
}

func (x *ServicesConfig) GetTwitter() *ServiceConfig {
	if x != nil {
		return x.Twitter
	}
	return nil
}

type ServiceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableInlineCss bool `protobuf:"varint,1,opt,name=disable_inline_css,json=disableInlineCss,proto3" json:"disable_inline_css,omitempty"`
}

func (x *ServiceConfig) Reset() {
	*x = ServiceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceConfig) ProtoMessage() {}

func (x *ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceConfig.ProtoReflect.Descriptor instead.
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{11}
}

func (x *ServiceConfig) GetDisableInlineCss() bool {
	if x != nil {
		return x.DisableInlineCss
	}
	return false
}

type RepeatedString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *RepeatedString) Reset() {
	*x = RepeatedString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedString) ProtoMessage() {}

func (x *RepeatedString) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedString.ProtoReflect.Descriptor instead.
func (*RepeatedString) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{12}
}

func (x *RepeatedString) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type RepeatedMenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MenuItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RepeatedMenuItem) Reset() {
	*x = RepeatedMenuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedMenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedMenuItem) ProtoMessage() {}

func (x *RepeatedMenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedMenuItem.ProtoReflect.Descriptor instead.
func (*RepeatedMenuItem) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{13}
}

func (x *RepeatedMenuItem) GetItems() []*MenuItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ParamsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env                            string                `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
	Description                    string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Author                         string                `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	DefaultTheme                   string                `protobuf:"bytes,4,opt,name=default_theme,json=defaultTheme,proto3" json:"default_theme,omitempty"`
	ShowShareButtons               bool                  `protobuf:"varint,5,opt,name=show_share_buttons,json=showShareButtons,proto3" json:"show_share_buttons,omitempty"`
	ShowReadingTime                bool                  `protobuf:"varint,6,opt,name=show_reading_time,json=showReadingTime,proto3" json:"show_reading_time,omitempty"`
	DisplayFullLangName            bool                  `protobuf:"varint,7,opt,name=display_full_lang_name,json=displayFullLangName,proto3" json:"display_full_lang_name,omitempty"`
	ShowPostNavLinks               bool                  `protobuf:"varint,8,opt,name=show_post_nav_links,json=showPostNavLinks,proto3" json:"show_post_nav_links,omitempty"`
	ShowBreadCrumbs                bool                  `protobuf:"varint,9,opt,name=show_bread_crumbs,json=showBreadCrumbs,proto3" json:"show_bread_crumbs,omitempty"`
	ShowCodeCopyButtons            bool                  `protobuf:"varint,10,opt,name=show_code_copy_buttons,json=showCodeCopyButtons,proto3" json:"show_code_copy_buttons,omitempty"`
	ShowRssButtonInSectionTermList bool                  `protobuf:"varint,11,opt,name=show_rss_button_in_section_term_list,json=showRssButtonInSectionTermList,proto3" json:"show_rss_button_in_section_term_list,omitempty"`
	ShowAllPagesInArchive          bool                  `protobuf:"varint,12,opt,name=show_all_pages_in_archive,json=showAllPagesInArchive,proto3" json:"show_all_pages_in_archive,omitempty"`
	ShowPageNums                   bool                  `protobuf:"varint,13,opt,name=show_page_nums,json=showPageNums,proto3" json:"show_page_nums,omitempty"`
	ShowToc                        bool                  `protobuf:"varint,14,opt,name=show_toc,json=showToc,proto3" json:"show_toc,omitempty"`
	Images                         []string              `protobuf:"bytes,15,rep,name=images,proto3" json:"images,omitempty"`
	ProfileMode                    *ProfileModeConfig    `protobuf:"bytes,16,opt,name=profile_mode,json=profileMode,proto3" json:"profile_mode,omitempty"`
	HomeInfoParams                 *HomeInfoParamsConfig `protobuf:"bytes,17,opt,name=home_info_params,json=homeInfoParams,proto3" json:"home_info_params,omitempty"`
	SocialIcons                    []*SocialIconConfig   `protobuf:"bytes,18,rep,name=social_icons,json=socialIcons,proto3" json:"social_icons,omitempty"`
	EditPost                       *EditPostConfig       `protobuf:"bytes,19,opt,name=edit_post,json=editPost,proto3" json:"edit_post,omitempty"`
	Assets                         *AssetsConfig         `protobuf:"bytes,20,opt,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ParamsConfig) Reset() {
	*x = ParamsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsConfig) ProtoMessage() {}

func (x *ParamsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsConfig.ProtoReflect.Descriptor instead.
func (*ParamsConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{14}
}

func (x *ParamsConfig) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ParamsConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ParamsConfig) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ParamsConfig) GetDefaultTheme() string {
	if x != nil {
		return x.DefaultTheme
	}
	return ""
}

func (x *ParamsConfig) GetShowShareButtons() bool {
	if x != nil {
		return x.ShowShareButtons
	}
	return false
}

func (x *ParamsConfig) GetShowReadingTime() bool {
	if x != nil {
		return x.ShowReadingTime
	}
	return false
}

func (x *ParamsConfig) GetDisplayFullLangName() bool {
	if x != nil {
		return x.DisplayFullLangName
	}
	return false
}

func (x *ParamsConfig) GetShowPostNavLinks() bool {
	if x != nil {
		return x.ShowPostNavLinks
	}
	return false
}

func (x *ParamsConfig) GetShowBreadCrumbs() bool {
	if x != nil {
		return x.ShowBreadCrumbs
	}
	return false
}

func (x *ParamsConfig) GetShowCodeCopyButtons() bool {
	if x != nil {
		return x.ShowCodeCopyButtons
	}
	return false
}

func (x *ParamsConfig) GetShowRssButtonInSectionTermList() bool {
	if x != nil {
		return x.ShowRssButtonInSectionTermList
	}
	return false
}

func (x *ParamsConfig) GetShowAllPagesInArchive() bool {
	if x != nil {
		return x.ShowAllPagesInArchive
	}
	return false
}

func (x *ParamsConfig) GetShowPageNums() bool {
	if x != nil {
		return x.ShowPageNums
	}
	return false
}

func (x *ParamsConfig) GetShowToc() bool {
	if x != nil {
		return x.ShowToc
	}
	return false
}

func (x *ParamsConfig) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ParamsConfig) GetProfileMode() *ProfileModeConfig {
	if x != nil {
		return x.ProfileMode
	}
	return nil
}

func (x *ParamsConfig) GetHomeInfoParams() *HomeInfoParamsConfig {
	if x != nil {
		return x.HomeInfoParams
	}
	return nil
}

func (x *ParamsConfig) GetSocialIcons() []*SocialIconConfig {
	if x != nil {
		return x.SocialIcons
	}
	return nil
}

func (x *ParamsConfig) GetEditPost() *EditPostConfig {
	if x != nil {
		return x.EditPost
	}
	return nil
}

func (x *ParamsConfig) GetAssets() *AssetsConfig {
	if x != nil {
		return x.Assets
	}
	return nil
}

type ProfileModeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool            `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Title      string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ImageUrl   string          `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	ImageTitle string          `protobuf:"bytes,4,opt,name=image_title,json=imageTitle,proto3" json:"image_title,omitempty"`
	Buttons    []*ButtonConfig `protobuf:"bytes,5,rep,name=buttons,proto3" json:"buttons,omitempty"`
}

func (x *ProfileModeConfig) Reset() {
	*x = ProfileModeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileModeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileModeConfig) ProtoMessage() {}

func (x *ProfileModeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileModeConfig.ProtoReflect.Descriptor instead.
func (*ProfileModeConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{15}
}

func (x *ProfileModeConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ProfileModeConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProfileModeConfig) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ProfileModeConfig) GetImageTitle() string {
	if x != nil {
		return x.ImageTitle
	}
	return ""
}

func (x *ProfileModeConfig) GetButtons() []*ButtonConfig {
	if x != nil {
		return x.Buttons
	}
	return nil
}

type ButtonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ButtonConfig) Reset() {
	*x = ButtonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonConfig) ProtoMessage() {}

func (x *ButtonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonConfig.ProtoReflect.Descriptor instead.
func (*ButtonConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{16}
}

func (x *ButtonConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ButtonConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type HomeInfoParamsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *HomeInfoParamsConfig) Reset() {
	*x = HomeInfoParamsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeInfoParamsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeInfoParamsConfig) ProtoMessage() {}

func (x *HomeInfoParamsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeInfoParamsConfig.ProtoReflect.Descriptor instead.
func (*HomeInfoParamsConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{17}
}

func (x *HomeInfoParamsConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomeInfoParamsConfig) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SocialIconConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SocialIconConfig) Reset() {
	*x = SocialIconConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_blog_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialIconConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialIconConfig) ProtoMessage() {}

func (x *SocialIconConfig) ProtoReflect() protoreflect.Message {
	mi := &file_content_blog_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialIconConfig.ProtoReflect.Descriptor instead.
func (*SocialIconConfig) Descriptor() ([]byte, []int) {
	return file_content_blog_proto_rawDescGZIP(), []int{18}
}

func (x *SocialIconConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SocialIconConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SocialIconConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_content_blog_proto protoreflect.FileDescriptor

var file_content_blog_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc7, 0x07,
	0x0a, 0x0a, 0x48, 0x75, 0x67, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x73, 0x54, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x66, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x79, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x70, 0x79, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x73, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x6d,
	0x69, 0x6e, 0x69, 0x66, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x66, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x75, 0x67, 0x6f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x75, 0x67, 0x6f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75,
	0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x55, 0x0a, 0x0e, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x53, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x78, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x58, 0x6d, 0x6c, 0x22, 0xee, 0x03, 0x0a, 0x0e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x47,
	0x0a, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x3b,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x09, 0x4d, 0x65,
	0x6e, 0x75, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39,
	0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x08, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x60, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x31, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x68, 0x6c, 0x6a, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x6c, 0x6a, 0x73, 0x22, 0x7b, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x67, 0x6f, 0x6c, 0x64,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x08, 0x67, 0x6f, 0x6c, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x36, 0x0a,
	0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x6f, 0x6c, 0x64, 0x6d, 0x61, 0x72,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x08, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x0e,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e,
	0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x30, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x73,
	0x73, 0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x10, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xaa, 0x07, 0x0a, 0x0c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x75, 0x6c,
	0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x76, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x62, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x42, 0x72, 0x65, 0x61, 0x64, 0x43, 0x72,
	0x75, 0x6d, 0x62, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x70, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x24, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x72, 0x73, 0x73, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x73, 0x68, 0x6f, 0x77, 0x52, 0x73, 0x73,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x65, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x19, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x77,
	0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x74, 0x6f, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x54,
	0x6f, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x73,
	0x12, 0x34, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x65, 0x64,
	0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x0c, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x46, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x10, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x87, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x42, 0x6c, 0x6f, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x75, 0x6e, 0x61, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2d, 0x61, 0x69, 0x2f, 0x6c,
	0x75, 0x6e, 0x61, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0xca, 0x02, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0xe2, 0x02, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_content_blog_proto_rawDescOnce sync.Once
	file_content_blog_proto_rawDescData = file_content_blog_proto_rawDesc
)

func file_content_blog_proto_rawDescGZIP() []byte {
	file_content_blog_proto_rawDescOnce.Do(func() {
		file_content_blog_proto_rawDescData = protoimpl.X.CompressGZIP(file_content_blog_proto_rawDescData)
	})
	return file_content_blog_proto_rawDescData
}

var file_content_blog_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_content_blog_proto_goTypes = []interface{}{
	(*HugoConfig)(nil),           // 0: content.HugoConfig
	(*MinifyConfig)(nil),         // 1: content.MinifyConfig
	(*LanguageConfig)(nil),       // 2: content.LanguageConfig
	(*MenuItem)(nil),             // 3: content.MenuItem
	(*EditPostConfig)(nil),       // 4: content.EditPostConfig
	(*AssetsConfig)(nil),         // 5: content.AssetsConfig
	(*MarkupConfig)(nil),         // 6: content.MarkupConfig
	(*GoldmarkConfig)(nil),       // 7: content.GoldmarkConfig
	(*RendererConfig)(nil),       // 8: content.RendererConfig
	(*HighlightConfig)(nil),      // 9: content.HighlightConfig
	(*ServicesConfig)(nil),       // 10: content.ServicesConfig
	(*ServiceConfig)(nil),        // 11: content.ServiceConfig
	(*RepeatedString)(nil),       // 12: content.RepeatedString
	(*RepeatedMenuItem)(nil),     // 13: content.RepeatedMenuItem
	(*ParamsConfig)(nil),         // 14: content.ParamsConfig
	(*ProfileModeConfig)(nil),    // 15: content.ProfileModeConfig
	(*ButtonConfig)(nil),         // 16: content.ButtonConfig
	(*HomeInfoParamsConfig)(nil), // 17: content.HomeInfoParamsConfig
	(*SocialIconConfig)(nil),     // 18: content.SocialIconConfig
	nil,                          // 19: content.HugoConfig.LanguagesEntry
	nil,                          // 20: content.HugoConfig.OutputsEntry
	nil,                          // 21: content.LanguageConfig.TaxonomiesEntry
	nil,                          // 22: content.LanguageConfig.MenuEntry
	nil,                          // 23: content.LanguageConfig.ParamsEntry
}
var file_content_blog_proto_depIdxs = []int32{
	1,  // 0: content.HugoConfig.minify:type_name -> content.MinifyConfig
	19, // 1: content.HugoConfig.languages:type_name -> content.HugoConfig.LanguagesEntry
	20, // 2: content.HugoConfig.outputs:type_name -> content.HugoConfig.OutputsEntry
	14, // 3: content.HugoConfig.params:type_name -> content.ParamsConfig
	6,  // 4: content.HugoConfig.markup:type_name -> content.MarkupConfig
	10, // 5: content.HugoConfig.services:type_name -> content.ServicesConfig
	21, // 6: content.LanguageConfig.taxonomies:type_name -> content.LanguageConfig.TaxonomiesEntry
	22, // 7: content.LanguageConfig.menu:type_name -> content.LanguageConfig.MenuEntry
	23, // 8: content.LanguageConfig.params:type_name -> content.LanguageConfig.ParamsEntry
	7,  // 9: content.MarkupConfig.goldmark:type_name -> content.GoldmarkConfig
	9,  // 10: content.MarkupConfig.highlight:type_name -> content.HighlightConfig
	8,  // 11: content.GoldmarkConfig.renderer:type_name -> content.RendererConfig
	11, // 12: content.ServicesConfig.instagram:type_name -> content.ServiceConfig
	11, // 13: content.ServicesConfig.twitter:type_name -> content.ServiceConfig
	3,  // 14: content.RepeatedMenuItem.items:type_name -> content.MenuItem
	15, // 15: content.ParamsConfig.profile_mode:type_name -> content.ProfileModeConfig
	17, // 16: content.ParamsConfig.home_info_params:type_name -> content.HomeInfoParamsConfig
	18, // 17: content.ParamsConfig.social_icons:type_name -> content.SocialIconConfig
	4,  // 18: content.ParamsConfig.edit_post:type_name -> content.EditPostConfig
	5,  // 19: content.ParamsConfig.assets:type_name -> content.AssetsConfig
	16, // 20: content.ProfileModeConfig.buttons:type_name -> content.ButtonConfig
	2,  // 21: content.HugoConfig.LanguagesEntry.value:type_name -> content.LanguageConfig
	12, // 22: content.HugoConfig.OutputsEntry.value:type_name -> content.RepeatedString
	13, // 23: content.LanguageConfig.MenuEntry.value:type_name -> content.RepeatedMenuItem
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_content_blog_proto_init() }
func file_content_blog_proto_init() {
	if File_content_blog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_content_blog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HugoConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinifyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditPostConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldmarkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RendererConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighlightConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicesConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedMenuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileModeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeInfoParamsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_blog_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialIconConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_content_blog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_content_blog_proto_goTypes,
		DependencyIndexes: file_content_blog_proto_depIdxs,
		MessageInfos:      file_content_blog_proto_msgTypes,
	}.Build()
	File_content_blog_proto = out.File
	file_content_blog_proto_rawDesc = nil
	file_content_blog_proto_goTypes = nil
	file_content_blog_proto_depIdxs = nil
}
