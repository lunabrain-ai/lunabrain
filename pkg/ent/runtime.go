// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/lunabrain-ai/lunabrain/pkg/ent/content"
	entevent "github.com/lunabrain-ai/lunabrain/pkg/ent/event"
	"github.com/lunabrain-ai/lunabrain/pkg/ent/group"
	"github.com/lunabrain-ai/lunabrain/pkg/ent/groupuser"
	"github.com/lunabrain-ai/lunabrain/pkg/ent/schema"
	"github.com/lunabrain-ai/lunabrain/pkg/ent/tag"
	entuser "github.com/lunabrain-ai/lunabrain/pkg/ent/user"
	"github.com/markbates/goth"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	contentFields := schema.Content{}.Fields()
	_ = contentFields
	// contentDescCreatedAt is the schema descriptor for created_at field.
	contentDescCreatedAt := contentFields[3].Descriptor()
	// content.DefaultCreatedAt holds the default value on creation for the created_at field.
	content.DefaultCreatedAt = contentDescCreatedAt.Default.(func() time.Time)
	// contentDescUpdatedAt is the schema descriptor for updated_at field.
	contentDescUpdatedAt := contentFields[4].Descriptor()
	// content.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	content.DefaultUpdatedAt = contentDescUpdatedAt.Default.(func() time.Time)
	// content.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	content.UpdateDefaultUpdatedAt = contentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// contentDescID is the schema descriptor for id field.
	contentDescID := contentFields[0].Descriptor()
	// content.DefaultID holds the default value on creation for the id field.
	content.DefaultID = contentDescID.Default.(func() uuid.UUID)
	enteventFields := schema.Event{}.Fields()
	_ = enteventFields
	// enteventDescCreatedAt is the schema descriptor for created_at field.
	enteventDescCreatedAt := enteventFields[2].Descriptor()
	// entevent.DefaultCreatedAt holds the default value on creation for the created_at field.
	entevent.DefaultCreatedAt = enteventDescCreatedAt.Default.(func() time.Time)
	// enteventDescID is the schema descriptor for id field.
	enteventDescID := enteventFields[0].Descriptor()
	// entevent.DefaultID holds the default value on creation for the id field.
	entevent.DefaultID = enteventDescID.Default.(func() uuid.UUID)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupFields[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() uuid.UUID)
	groupuserFields := schema.GroupUser{}.Fields()
	_ = groupuserFields
	// groupuserDescID is the schema descriptor for id field.
	groupuserDescID := groupuserFields[0].Descriptor()
	// groupuser.DefaultID holds the default value on creation for the id field.
	groupuser.DefaultID = groupuserDescID.Default.(func() uuid.UUID)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescID is the schema descriptor for id field.
	tagDescID := tagFields[0].Descriptor()
	// tag.DefaultID holds the default value on creation for the id field.
	tag.DefaultID = tagDescID.Default.(func() uuid.UUID)
	entuserFields := schema.User{}.Fields()
	_ = entuserFields
	// entuserDescVerified is the schema descriptor for verified field.
	entuserDescVerified := entuserFields[4].Descriptor()
	// entuser.DefaultVerified holds the default value on creation for the verified field.
	entuser.DefaultVerified = entuserDescVerified.Default.(bool)
	// entuserDescOauthUser is the schema descriptor for oauth_user field.
	entuserDescOauthUser := entuserFields[6].Descriptor()
	// entuser.DefaultOauthUser holds the default value on creation for the oauth_user field.
	entuser.DefaultOauthUser = entuserDescOauthUser.Default.(goth.User)
	// entuserDescID is the schema descriptor for id field.
	entuserDescID := entuserFields[0].Descriptor()
	// entuser.DefaultID holds the default value on creation for the id field.
	entuser.DefaultID = entuserDescID.Default.(func() uuid.UUID)
}
