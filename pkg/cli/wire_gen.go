// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cli

import (
	"github.com/lunabrain-ai/lunabrain/pkg/api"
	"github.com/lunabrain-ai/lunabrain/pkg/config"
	"github.com/lunabrain-ai/lunabrain/pkg/pipeline/normalize"
	"github.com/lunabrain-ai/lunabrain/pkg/pipeline/scrape"
	"github.com/lunabrain-ai/lunabrain/pkg/pipeline/text"
	"github.com/lunabrain-ai/lunabrain/pkg/python"
	"github.com/lunabrain-ai/lunabrain/pkg/store"
	"github.com/lunabrain-ai/lunabrain/pkg/store/db"
	"github.com/urfave/cli/v2"
)

// Injectors from wire.go:

func Wire() (*cli.App, error) {
	provider, err := config.NewConfigProvider()
	if err != nil {
		return nil, err
	}
	apiConfig, err := api.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	folderCache, err := store.NewFolderCache()
	if err != nil {
		return nil, err
	}
	dbStore, err := db.NewDB(folderCache)
	if err != nil {
		return nil, err
	}
	files, err := store.NewBucket(folderCache)
	if err != nil {
		return nil, err
	}
	pythonConfig, err := python.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	pythonClient, err := python.NewPythonClient(pythonConfig)
	if err != nil {
		return nil, err
	}
	audioNormalizer, err := normalize.NewAudioNormalizer(pythonClient)
	if err != nil {
		return nil, err
	}
	scrapeConfig, err := scrape.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	scraper := scrape.NewScraper(scrapeConfig)
	urlNormalizer, err := normalize.NewURLNormalizer(pythonClient, scraper, dbStore)
	if err != nil {
		return nil, err
	}
	normalizer, err := normalize.NewNormalizer(audioNormalizer, urlNormalizer, dbStore)
	if err != nil {
		return nil, err
	}
	summarizer, err := text.NewSummarizer(pythonClient)
	if err != nil {
		return nil, err
	}
	server := api.NewAPIServer(dbStore, files, normalizer, summarizer)
	apihttpServer := api.NewAPIHTTPServer(apiConfig, server)
	app := NewApp(apihttpServer, normalizer, summarizer)
	return app, nil
}
